@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix pgsql: <http://semantalytics.com/2017/12/ns/postgresql> .

# https://www.postgresql.org/docs/9.1/static/information-schema.html

# 34.3. information_schema_catalog_name
# https://www.postgresql.org/docs/9.1/static/infoschema-information-schema-catalog-name.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.information_schema_catalog_name"
         ];
         rr:subjectMap [
            rr:class pgsql:CatalogName;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:catalogName;
            rr:objectMap [
                rr:column "catalog_name";
            ];
];
.

# 34.4. administrable_role_authorizations
# https://www.postgresql.org/docs/9.1/static/infoschema-administrable-role-authorizations.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.administrable_role_authorizations"
         ];
         rr:subjectMap [
            rr:class pgsql:AdministrableRoleAuthorization;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantee";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "role_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_grantable";
            ];
];
.

# 34.5. applicable_roles
# https://www.postgresql.org/docs/9.1/static/infoschema-applicable-roles.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.applicable_roles"
         ];
         rr:subjectMap [
            rr:class pgsql:ApplicableRole;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantee";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "role_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_grantable";
            ];
];
.

# 34.6. attributes
# https://www.postgresql.org/docs/9.1/static/infoschema-attributes.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.attributes"
         ];
         rr:subjectMap [
            rr:class pgsql:Attribute;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "attribute_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "ordinal_position";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "attribute_default";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_nullable";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "data_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_maximum_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_octet_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision_radix";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_scale";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "datetime_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "attribute_udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "attribute_udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "attribute_udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "maximum_cardinality";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_derived_reference_attribute";
            ];
];
.

# 34.7. character_sets
# https://www.postgresql.org/docs/9.1/static/infoschema-character-sets.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.character_sets"
         ];
         rr:subjectMap [
            rr:class pgsql:CharacterSet;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_repertoire";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "form_of_use";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "default_collate_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "default_collate_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "default_collate_name";
            ];
];
.

# 34.8. check_constraint_routine_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-check-constraint-routine-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.check_constraint_routine_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:CheckConstraintRoutineUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_name";
            ];
];
.

# 34.9. check_constraints
# https://www.postgresql.org/docs/9.1/static/infoschema-check-constraints.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.check_constraints"
         ];
         rr:subjectMap [
            rr:class pgsql:CheckConstraint;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "check_clause";
            ];
];
.

# 34.10. collations
# https://www.postgresql.org/docs/9.1/static/infoschema-collations.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.collations"
         ];
         rr:subjectMap [
            rr:class pgsql:Collations;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "pad_attribute";
            ];
];

# 34.11. collation_character_set_applicability
# https://www.postgresql.org/docs/9.1/static/infoschema-collation-character-set-applicab.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.collation_character_set_applicability"
         ];
         rr:subjectMap [
            rr:class pgsql:CollationCharacterSetApplicability;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
];
.

# 34.12. column_domain_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-column-domain-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.column_domain_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ColumnDomainUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
];
.

# 34.13. column_privileges
# https://www.postgresql.org/docs/9.1/static/infoschema-column-privileges.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.column_privileges"
         ];
         rr:subjectMap [
            rr:class pgsql:ColumnPrivilege;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantor";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantee";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "privilege_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_grantable";
            ];
];
.

# 34.14. column_udt_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-column-udt-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.column_udt_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ColumnUdtUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
];
.

# 34.15. columns
# https://www.postgresql.org/docs/9.1/static/infoschema-columns.html


<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.columns"
         ];
         rr:subjectMap [
            rr:class pgsql:Column;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "ordinal_position";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_default";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_nullable";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "data_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_maximum_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_octet_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision_radix";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_scale";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "datetime_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "maximum_cardinality";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_self_referencing";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_identity";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_generation";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_start";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_increment";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_maximum";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_minimum";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "identity_cycle";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_generated";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "generation_expression";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_updatable";
            ];
];
.

# 34.16. constraint_column_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-constraint-column-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.constraint_column_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ConstraintColumnUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
];
.

# 34.17. constraint_table_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-constraint-table-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.constraint_table_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ConstraintTableUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
];
.

# 34.18. data_type_privileges
# https://www.postgresql.org/docs/9.1/static/infoschema-data-type-privileges.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.data_type_privileges"
         ];
         rr:subjectMap [
            rr:class pgsql:DataTypePrivileges;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
];
.

# 34.19. domain_constraints
# https://www.postgresql.org/docs/9.1/static/infoschema-domain-constraints.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.domain_constraints"
         ];
         rr:subjectMap [
            rr:class pgsql:DomainConstraint;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_deferrable";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "initially_deferred";
            ];
];
.

# 34.20. domain_udt_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-domain-udt-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.domain_udt_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:DomainUdtUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_name";
            ];
];
.

# 34.21. domains
# https://www.postgresql.org/docs/9.1/static/infoschema-domains.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.domains"
         ];
         rr:subjectMap [
            rr:class pgsql:Domain;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "data_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_maximum_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_octet_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision_radix";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_scale";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "datetime_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_default";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "maximum_cardinality";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
];
.

# 34.22. element_types
# https://www.postgresql.org/docs/9.1/static/infoschema-element-types.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.element_types"
         ];
         rr:subjectMap [
            rr:class pgsql:ElementType;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "object_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collection_type_identifier";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "data_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_maximum_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_octet_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision_radix";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_scale";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "datetime_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "domain_default";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "maximum_cardinality";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
];
.

# 34.23. enabled_roles
# https://www.postgresql.org/docs/9.1/static/infoschema-enabled-roles.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.enabled_roles"
         ];
         rr:subjectMap [
            rr:class pgsql:EnabledRole;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "role_name";
            ];
];
.

# 34.24. foreign_data_wrapper_options
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-data-wrapper-options.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_data_wrapper_options"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignDataWrapperOption;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_value";
            ];
];
.

# 34.25. foreign_data_wrappers
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-data-wrappers.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_data_wrappers"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignDataWrapper;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "authorization_identifier";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "library_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_language";
            ];
];
.

# 34.26. foreign_server_options
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-server-options.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_server_options"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignServerOption;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_value";
            ];
];
.

# 34.27. foreign_servers
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-servers.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_servers"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignServer;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_data_wrapper_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_version";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "authorization_identifier";
            ];
];
.

# 34.28. foreign_table_options
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-table-options.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_table_options"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignTableOption;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "option_value";
            ];
];
.

# 34.29. foreign_tables
# https://www.postgresql.org/docs/9.1/static/infoschema-foreign-tables.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.foreign_tables"
         ];
         rr:subjectMap [
            rr:class pgsql:ForeignTable;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "foreign_server_name";
            ];
];
.

# 34.30. key_column_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-key-column-usage.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.key_column_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:KeyColumnUsage;
            rr:termType rr:BlankNode;
         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "ordinal_position";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "position_in_unique_constraint";
            ];
];
.

# 34.31. parameters
# https://www.postgresql.org/docs/9.1/static/infoschema-parameters.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.parameters"
         ];
         rr:subjectMap [
            rr:class pgsql:Parameter;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "specific_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "ordinal_position";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "parameter_mode";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_result";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "as_locator";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "parameter_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "data_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_maximum_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_octet_length";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "character_set_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "collation_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_precision_radix";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "numeric_scale";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "datetime_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "interval_precision";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "udt_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "scope_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "maximum_cardinality";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "dtd_identifier";
            ];
];
.

# 34.32. referential_constraints
# https://www.postgresql.org/docs/9.1/static/infoschema-referential-constraints.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.referential_constraints"
         ];
         rr:subjectMap [
            rr:class pgsql:ReferentialConstraint;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "unique_constraint_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "unique_constraint_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "unique_constraint_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "match_option";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "update_rule";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "delete_rule";
            ];
];
.

# 34.33. role_column_grants
# https://www.postgresql.org/docs/9.1/static/infoschema-role-column-grants.html

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.role_column_grants"
         ];
         rr:subjectMap [
            rr:class pgsql:RoleColumnGrant;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantor";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "grantee";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_catalog";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_schema";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "table_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "column_name";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "privilege_type";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "is_grantable";
            ];
];
.

# 34.34. role_routine_grants
# https://www.postgresql.org/docs/9.1/static/infoschema-role-routine-grants.html

grantor 	sql_identifier 	Name of the role that granted the privilege
grantee 	sql_identifier 	Name of the role that the privilege was granted to
specific_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
specific_schema 	sql_identifier 	Name of the schema containing the function
specific_name 	sql_identifier 	The "specific name" of the function. See Section 34.38 for more information.
routine_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
routine_schema 	sql_identifier 	Name of the schema containing the function
routine_name 	sql_identifier 	Name of the function (might be duplicated in case of overloading)
privilege_type 	character_data 	Always EXECUTE (the only privilege type for functions)
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.role_routine_grants"
         ];
         rr:subjectMap [
            rr:class pgsql:RoleRoutineGrant;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.35. role_table_grants
# https://www.postgresql.org/docs/9.1/static/infoschema-role-table-grants.html

grantor 	sql_identifier 	Name of the role that granted the privilege
grantee 	sql_identifier 	Name of the role that the privilege was granted to
table_catalog 	sql_identifier 	Name of the database that contains the table (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table
table_name 	sql_identifier 	Name of the table
privilege_type 	character_data 	Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not
with_hierarchy 	yes_or_no 	Applies to a feature not available in PostgreSQL

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.role_table_grants"
         ];
         rr:subjectMap [
            rr:class pgsql:RoleTableGrant;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.36. role_usage_grants
# https://www.postgresql.org/docs/9.1/static/infoschema-role-usage-grants.html

grantor 	sql_identifier 	The name of the role that granted the privilege
grantee 	sql_identifier 	The name of the role that the privilege was granted to
object_catalog 	sql_identifier 	Name of the database containing the object (always the current database)
object_schema 	sql_identifier 	Name of the schema containing the object, if applicable, else an empty string
object_name 	sql_identifier 	Name of the object
object_type 	character_data 	COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER
privilege_type 	character_data 	Always USAGE
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.role_usage_grants"
         ];
         rr:subjectMap [
            rr:class pgsql:RoleUsageGrant;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.37. routine_privileges
# https://www.postgresql.org/docs/9.1/static/infoschema-routine-privileges.html

grantor 	sql_identifier 	Name of the role that granted the privilege
grantee 	sql_identifier 	Name of the role that the privilege was granted to
specific_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
specific_schema 	sql_identifier 	Name of the schema containing the function
specific_name 	sql_identifier 	The "specific name" of the function. See Section 34.38 for more information.
routine_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
routine_schema 	sql_identifier 	Name of the schema containing the function
routine_name 	sql_identifier 	Name of the function (might be duplicated in case of overloading)
privilege_type 	character_data 	Always EXECUTE (the only privilege type for functions)
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.routine_privileges"
         ];
         rr:subjectMap [
            rr:class pgsql:RoutinePrivilege;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.38. routines
# https://www.postgresql.org/docs/9.1/static/infoschema-routines.html

specific_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
specific_schema 	sql_identifier 	Name of the schema containing the function
specific_name 	sql_identifier 	The "specific name" of the function. This is a name that uniquely identifies the function in the schema, even if the real name of the function is overloaded. The format of the specific name is not defined, it should only be used to compare it to other instances of specific routine names.
routine_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
routine_schema 	sql_identifier 	Name of the schema containing the function
routine_name 	sql_identifier 	Name of the function (might be duplicated in case of overloading)
routine_type 	character_data 	Always FUNCTION (In the future there might be other types of routines.)
module_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
module_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
module_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
udt_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
udt_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
udt_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
data_type 	character_data 	Return data type of the function, if it is a built-in type, or ARRAY if it is some array (in that case, see the view element_types), else USER-DEFINED (in that case, the type is identified in type_udt_name and associated columns).
character_maximum_length 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
character_octet_length 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
character_set_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
character_set_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
character_set_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
collation_catalog 	sql_identifier 	Always null, since this information is not applied to return data types in PostgreSQL
collation_schema 	sql_identifier 	Always null, since this information is not applied to return data types in PostgreSQL
collation_name 	sql_identifier 	Always null, since this information is not applied to return data types in PostgreSQL
numeric_precision 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
numeric_precision_radix 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
numeric_scale 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
datetime_precision 	cardinal_number 	Always null, since this information is not applied to return data types in PostgreSQL
interval_type 	character_data 	Always null, since this information is not applied to return data types in PostgreSQL
interval_precision 	character_data 	Always null, since this information is not applied to return data types in PostgreSQL
type_udt_catalog 	sql_identifier 	Name of the database that the return data type of the function is defined in (always the current database)
type_udt_schema 	sql_identifier 	Name of the schema that the return data type of the function is defined in
type_udt_name 	sql_identifier 	Name of the return data type of the function
scope_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
scope_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
scope_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
maximum_cardinality 	cardinal_number 	Always null, because arrays always have unlimited maximum cardinality in PostgreSQL
dtd_identifier 	sql_identifier 	An identifier of the data type descriptor of the return data type of this function, unique among the data type descriptors pertaining to the function. This is mainly useful for joining with other instances of such identifiers. (The specific format of the identifier is not defined and not guaranteed to remain the same in future versions.)
routine_body 	character_data 	If the function is an SQL function, then SQL, else EXTERNAL.
routine_definition 	character_data 	The source text of the function (null if the function is not owned by a currently enabled role). (According to the SQL standard, this column is only applicable if routine_body is SQL, but in PostgreSQL it will contain whatever source text was specified when the function was created.)
external_name 	character_data 	If this function is a C function, then the external name (link symbol) of the function; else null. (This works out to be the same value that is shown in routine_definition.)
external_language 	character_data 	The language the function is written in
parameter_style 	character_data 	Always GENERAL (The SQL standard defines other parameter styles, which are not available in PostgreSQL.)
is_deterministic 	yes_or_no 	If the function is declared immutable (called deterministic in the SQL standard), then YES, else NO. (You cannot query the other volatility levels available in PostgreSQL through the information schema.)
sql_data_access 	character_data 	Always MODIFIES, meaning that the function possibly modifies SQL data. This information is not useful for PostgreSQL.
is_null_call 	yes_or_no 	If the function automatically returns null if any of its arguments are null, then YES, else NO.
sql_path 	character_data 	Applies to a feature not available in PostgreSQL
schema_level_routine 	yes_or_no 	Always YES (The opposite would be a method of a user-defined type, which is a feature not available in PostgreSQL.)
max_dynamic_result_sets 	cardinal_number 	Applies to a feature not available in PostgreSQL
is_user_defined_cast 	yes_or_no 	Applies to a feature not available in PostgreSQL
is_implicitly_invocable 	yes_or_no 	Applies to a feature not available in PostgreSQL
security_type 	character_data 	If the function runs with the privileges of the current user, then INVOKER, if the function runs with the privileges of the user who defined it, then DEFINER.
to_sql_specific_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
to_sql_specific_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
to_sql_specific_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
as_locator 	yes_or_no 	Applies to a feature not available in PostgreSQL
created 	time_stamp 	Applies to a feature not available in PostgreSQL
last_altered 	time_stamp 	Applies to a feature not available in PostgreSQL
new_savepoint_level 	yes_or_no 	Applies to a feature not available in PostgreSQL
is_udt_dependent 	yes_or_no 	Applies to a feature not available in PostgreSQL
result_cast_from_data_type 	character_data 	Applies to a feature not available in PostgreSQL
result_cast_as_locator 	yes_or_no 	Applies to a feature not available in PostgreSQL
result_cast_char_max_length 	cardinal_number 	Applies to a feature not available in PostgreSQL
result_cast_char_octet_length 	character_data 	Applies to a feature not available in PostgreSQL
result_cast_char_set_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_char_set_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_char_set_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_collation_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_collation_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_collation_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_numeric_precision 	cardinal_number 	Applies to a feature not available in PostgreSQL
result_cast_numeric_precision_radix 	cardinal_number 	Applies to a feature not available in PostgreSQL
result_cast_numeric_scale 	cardinal_number 	Applies to a feature not available in PostgreSQL
result_cast_datetime_precision 	character_data 	Applies to a feature not available in PostgreSQL
result_cast_interval_type 	character_data 	Applies to a feature not available in PostgreSQL
result_cast_interval_precision 	character_data 	Applies to a feature not available in PostgreSQL
result_cast_type_udt_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_type_udt_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_type_udt_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_scope_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_scope_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_scope_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
result_cast_maximum_cardinality 	cardinal_number 	Applies to a feature not available in PostgreSQL
result_cast_dtd_identifier 	sql_identifier 	Applies to a feature not available in PostgreSQL

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.routines"
         ];
         rr:subjectMap [
            rr:class pgsql:Routine;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.39. schemata
# https://www.postgresql.org/docs/9.1/static/infoschema-schemata.html

catalog_name 	sql_identifier 	Name of the database that the schema is contained in (always the current database)
schema_name 	sql_identifier 	Name of the schema
schema_owner 	sql_identifier 	Name of the owner of the schema
default_character_set_catalog 	sql_identifier 	Applies to a feature not available in PostgreSQL
default_character_set_schema 	sql_identifier 	Applies to a feature not available in PostgreSQL
default_character_set_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
sql_path 	character_data 	Applies to a feature not available in PostgreSQL

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.schemata"
         ];
         rr:subjectMap [
            rr:class pgsql:Schemata;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.40. sequences
# https://www.postgresql.org/docs/9.1/static/infoschema-sequences.html

sequence_catalog 	sql_identifier 	Name of the database that contains the sequence (always the current database)
sequence_schema 	sql_identifier 	Name of the schema that contains the sequence
sequence_name 	sql_identifier 	Name of the sequence
data_type 	character_data 	The data type of the sequence. In PostgreSQL, this is currently always bigint.
numeric_precision 	cardinal_number 	This column contains the (declared or implicit) precision of the sequence data type (see above). The precision indicates the number of significant digits. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.
numeric_precision_radix 	cardinal_number 	This column indicates in which base the values in the columns numeric_precision and numeric_scale are expressed. The value is either 2 or 10.
numeric_scale 	cardinal_number 	This column contains the (declared or implicit) scale of the sequence data type (see above). The scale indicates the number of significant digits to the right of the decimal point. It can be expressed in decimal (base 10) or binary (base 2) terms, as specified in the column numeric_precision_radix.
start_value 	character_data 	The start value of the sequence
minimum_value 	character_data 	The minimum value of the sequence
maximum_value 	character_data 	The maximum value of the sequence
increment 	character_data 	The increment of the sequence
cycle_option 	yes_or_no 	YES if the sequence cycles, else NO

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sequences"
         ];
         rr:subjectMap [
            rr:class pgsql:Sequence;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.41. sql_features
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-features.html

feature_id 	character_data 	Identifier string of the feature
feature_name 	character_data 	Descriptive name of the feature
sub_feature_id 	character_data 	Identifier string of the subfeature, or a zero-length string if not a subfeature
sub_feature_name 	character_data 	Descriptive name of the subfeature, or a zero-length string if not a subfeature
is_supported 	yes_or_no 	YES if the feature is fully supported by the current version of PostgreSQL, NO if not
is_verified_by 	character_data 	Always null, since the PostgreSQL development group does not perform formal testing of feature conformance
comments 	character_data 	Possibly a comment about the supported status of the feature

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_features"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlFeature;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.42. sql_implementation_info
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-implementation-info.html

implementation_info_id 	character_data 	Identifier string of the implementation information item
implementation_info_name 	character_data 	Descriptive name of the implementation information item
integer_value 	cardinal_number 	Value of the implementation information item, or null if the value is contained in the column character_value
character_value 	character_data 	Value of the implementation information item, or null if the value is contained in the column integer_value
comments 	character_data 	Possibly a comment pertaining to the implementation information item


<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_implementation_info"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlImplementationInfo;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.43. sql_languages
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-languages.html

sql_language_source 	character_data 	The name of the source of the language definition; always ISO 9075, that is, the SQL standard
sql_language_year 	character_data 	The year the standard referenced in sql_language_source was approved.
sql_language_conformance 	character_data 	The standard conformance level for the language binding. For ISO 9075:2003 this is always CORE.
sql_language_integrity 	character_data 	Always null (This value is relevant to an earlier version of the SQL standard.)
sql_language_implementation 	character_data 	Always null
sql_language_binding_style 	character_data 	The language binding style, either DIRECT or EMBEDDED
sql_language_programming_language 	character_data 	The programming language, if the binding style is EMBEDDED, else null. PostgreSQL only supports the language C.

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_languages"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlLanguages;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.44. sql_packages
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-packages.html

feature_id 	character_data 	Identifier string of the package
feature_name 	character_data 	Descriptive name of the package
is_supported 	yes_or_no 	YES if the package is fully supported by the current version of PostgreSQL, NO if not
is_verified_by 	character_data 	Always null, since the PostgreSQL development group does not perform formal testing of feature conformance
comments 	character_data 	Possibly a comment about the supported status of the package

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_packages"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlPackages;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.45. sql_parts
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-parts.html

feature_id 	character_data 	An identifier string containing the number of the part
feature_name 	character_data 	Descriptive name of the part
is_supported 	yes_or_no 	YES if the part is fully supported by the current version of PostgreSQL, NO if not
is_verified_by 	character_data 	Always null, since the PostgreSQL development group does not perform formal testing of feature conformance
comments 	character_data 	Possibly a comment about the supported status of the part

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_parts"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlParts;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.46. sql_sizing
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-sizing.html

sizing_id 	cardinal_number 	Identifier of the sizing item
sizing_name 	character_data 	Descriptive name of the sizing item
supported_value 	cardinal_number 	Value of the sizing item, or 0 if the size is unlimited or cannot be determined, or null if the features for which the sizing item is applicable are not supported
comments 	character_data 	Possibly a comment pertaining to the sizing item

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_sizing"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlSizing;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.47. sql_sizing_profiles
# https://www.postgresql.org/docs/9.1/static/infoschema-sql-sizing-profiles.html

sizing_id 	cardinal_number 	Identifier of the sizing item
sizing_name 	character_data 	Descriptive name of the sizing item
profile_id 	character_data 	Identifier string of a profile
required_value 	cardinal_number 	The value required by the SQL profile for the sizing item, or 0 if the profile places no limit on the sizing item, or null if the profile does not require any of the features for which the sizing item is applicable
comments 	character_data 	Possibly a comment pertaining to the sizing item within the profile

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.sql_sizing_profiles"
         ];
         rr:subjectMap [
            rr:class pgsql:SqlSizingProfile;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.48. table_constraints
# https://www.postgresql.org/docs/9.1/static/infoschema-table-constraints.html

constraint_catalog 	sql_identifier 	Name of the database that contains the constraint (always the current database)
constraint_schema 	sql_identifier 	Name of the schema that contains the constraint
constraint_name 	sql_identifier 	Name of the constraint
table_catalog 	sql_identifier 	Name of the database that contains the table (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table
table_name 	sql_identifier 	Name of the table
constraint_type 	character_data 	Type of the constraint: CHECK, FOREIGN KEY, PRIMARY KEY, or UNIQUE
is_deferrable 	yes_or_no 	YES if the constraint is deferrable, NO if not
initially_deferred 	yes_or_no 	YES if the constraint is deferrable and initially deferred, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.table_constraints"
         ];
         rr:subjectMap [
            rr:class pgsql:TableConstraints;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.49. table_privileges
# https://www.postgresql.org/docs/9.1/static/infoschema-table-privileges.html

grantor 	sql_identifier 	Name of the role that granted the privilege
grantee 	sql_identifier 	Name of the role that the privilege was granted to
table_catalog 	sql_identifier 	Name of the database that contains the table (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table
table_name 	sql_identifier 	Name of the table
privilege_type 	character_data 	Type of the privilege: SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES, or TRIGGER
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not
with_hierarchy 	yes_or_no 	Applies to a feature not available in PostgreSQL

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.table_privileges"
         ];
         rr:subjectMap [
            rr:class pgsql:TablePrivilege;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.50. tables
# https://www.postgresql.org/docs/9.1/static/infoschema-tables.html

table_catalog 	sql_identifier 	Name of the database that contains the table (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table
table_name 	sql_identifier 	Name of the table
table_type 	character_data 	Type of the table: BASE TABLE for a persistent base table (the normal table type), VIEW for a view, FOREIGN TABLE for a foreign table, or LOCAL TEMPORARY for a temporary table
self_referencing_column_name 	sql_identifier 	Applies to a feature not available in PostgreSQL
reference_generation 	character_data 	Applies to a feature not available in PostgreSQL
user_defined_type_catalog 	sql_identifier 	If the table is a typed table, the name of the database that contains the underlying data type (always the current database), else null.
user_defined_type_schema 	sql_identifier 	If the table is a typed table, the name of the schema that contains the underlying data type, else null.
user_defined_type_name 	sql_identifier 	If the table is a typed table, the name of the underlying data type, else null.
is_insertable_into 	yes_or_no 	YES if the table is insertable into, NO if not (Base tables are always insertable into, views not necessarily.)
is_typed 	yes_or_no 	YES if the table is a typed table, NO if not
commit_action 	character_data 	If the table is a temporary table, then PRESERVE, else null. (The SQL standard defines other commit actions for temporary tables, which are not supported by PostgreSQL.)

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.tables"
         ];
         rr:subjectMap [
            rr:class pgsql:Table;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.51. triggered_update_columns
# https://www.postgresql.org/docs/9.1/static/infoschema-triggered-update-columns.html

trigger_catalog 	sql_identifier 	Name of the database that contains the trigger (always the current database)
trigger_schema 	sql_identifier 	Name of the schema that contains the trigger
trigger_name 	sql_identifier 	Name of the trigger
event_object_catalog 	sql_identifier 	Name of the database that contains the table that the trigger is defined on (always the current database)
event_object_schema 	sql_identifier 	Name of the schema that contains the table that the trigger is defined on
event_object_table 	sql_identifier 	Name of the table that the trigger is defined on
event_object_column 	sql_identifier 	Name of the column that the trigger is defined on

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.triggered_update_columns"
         ];
         rr:subjectMap [
            rr:class pgsql:TriggeredUpdateColumn;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.52. triggers
# https://www.postgresql.org/docs/9.1/static/infoschema-triggers.html

trigger_catalog 	sql_identifier 	Name of the database that contains the trigger (always the current database)
trigger_schema 	sql_identifier 	Name of the schema that contains the trigger
trigger_name 	sql_identifier 	Name of the trigger
event_manipulation 	character_data 	Event that fires the trigger (INSERT, UPDATE, or DELETE)
event_object_catalog 	sql_identifier 	Name of the database that contains the table that the trigger is defined on (always the current database)
event_object_schema 	sql_identifier 	Name of the schema that contains the table that the trigger is defined on
event_object_table 	sql_identifier 	Name of the table that the trigger is defined on
action_order 	cardinal_number 	Not yet implemented
action_condition 	character_data 	WHEN condition of the trigger, null if none (also null if the table is not owned by a currently enabled role)
action_statement 	character_data 	Statement that is executed by the trigger (currently always EXECUTE PROCEDURE function(...))
action_orientation 	character_data 	Identifies whether the trigger fires once for each processed row or once for each statement (ROW or STATEMENT)
action_timing 	character_data 	Time at which the trigger fires (BEFORE, AFTER, or INSTEAD OF)
action_reference_old_table 	sql_identifier 	Applies to a feature not available in PostgreSQL
action_reference_new_table 	sql_identifier 	Applies to a feature not available in PostgreSQL
action_reference_old_row 	sql_identifier 	Applies to a feature not available in PostgreSQL
action_reference_new_row 	sql_identifier 	Applies to a feature not available in PostgreSQL
created 	time_stamp 	Applies to a feature not available in PostgreSQL

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.triggers"
         ];
         rr:subjectMap [
            rr:class pgsql:Trigger;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.53. usage_privileges
# https://www.postgresql.org/docs/9.1/static/infoschema-usage-privileges.html

grantor 	sql_identifier 	Name of the role that granted the privilege
grantee 	sql_identifier 	Name of the role that the privilege was granted to
object_catalog 	sql_identifier 	Name of the database containing the object (always the current database)
object_schema 	sql_identifier 	Name of the schema containing the object, if applicable, else an empty string
object_name 	sql_identifier 	Name of the object
object_type 	character_data 	COLLATION or DOMAIN or FOREIGN DATA WRAPPER or FOREIGN SERVER
privilege_type 	character_data 	Always USAGE
is_grantable 	yes_or_no 	YES if the privilege is grantable, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.usage_privileges"
         ];
         rr:subjectMap [
            rr:class pgsql:UsagePrivilege;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.54. user_mapping_options
# https://www.postgresql.org/docs/9.1/static/infoschema-user-mapping-options.html

authorization_identifier 	sql_identifier 	Name of the user being mapped, or PUBLIC if the mapping is public
foreign_server_catalog 	sql_identifier 	Name of the database that the foreign server used by this mapping is defined in (always the current database)
foreign_server_name 	sql_identifier 	Name of the foreign server used by this mapping
option_name 	sql_identifier 	Name of an option
option_value 	character_data 	Value of the option. This column will show as null unless the current user is the user being mapped, or the mapping is for PUBLIC and the current user is the server owner, or the current user is a superuser. The intent is to protect password information stored as user mapping option.

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.user_mapping_options"
         ];
         rr:subjectMap [
            rr:class pgsql:UserMappingOption;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.55. user_mappings
# https://www.postgresql.org/docs/9.1/static/infoschema-user-mappings.html

authorization_identifier 	sql_identifier 	Name of the user being mapped, or PUBLIC if the mapping is public
foreign_server_catalog 	sql_identifier 	Name of the database that the foreign server used by this mapping is defined in (always the current database)
foreign_server_name 	sql_identifier 	Name of the foreign server used by this mapping

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.user_mappings"
         ];
         rr:subjectMap [
            rr:class pgsql:UserMapping;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.56. view_column_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-view-column-usage.html

view_catalog 	sql_identifier 	Name of the database that contains the view (always the current database)
view_schema 	sql_identifier 	Name of the schema that contains the view
view_name 	sql_identifier 	Name of the view
table_catalog 	sql_identifier 	Name of the database that contains the table that contains the column that is used by the view (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table that contains the column that is used by the view
table_name 	sql_identifier 	Name of the table that contains the column that is used by the view
column_name 	sql_identifier 	Name of the column that is used by the view

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.view_column_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ViewColumnUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.57. view_routine_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-view-routine-usage.html

table_catalog 	sql_identifier 	Name of the database containing the view (always the current database)
table_schema 	sql_identifier 	Name of the schema containing the view
table_name 	sql_identifier 	Name of the view
specific_catalog 	sql_identifier 	Name of the database containing the function (always the current database)
specific_schema 	sql_identifier 	Name of the schema containing the function
specific_name 	sql_identifier 	The "specific name" of the function. See Section 34.38 for more information.

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.view_routine_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ViewRoutineUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.58. view_table_usage
# https://www.postgresql.org/docs/9.1/static/infoschema-view-table-usage.html

view_catalog 	sql_identifier 	Name of the database that contains the view (always the current database)
view_schema 	sql_identifier 	Name of the schema that contains the view
view_name 	sql_identifier 	Name of the view
table_catalog 	sql_identifier 	Name of the database that contains the table that is used by the view (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the table that is used by the view
table_name 	sql_identifier 	Name of the table that is used by the view

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.view_table_usage"
         ];
         rr:subjectMap [
            rr:class pgsql:ViewTableUsage;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.

# 34.59. views
# https://www.postgresql.org/docs/9.1/static/infoschema-views.html

table_catalog 	sql_identifier 	Name of the database that contains the view (always the current database)
table_schema 	sql_identifier 	Name of the schema that contains the view
table_name 	sql_identifier 	Name of the view
view_definition 	character_data 	Query expression defining the view (null if the view is not owned by a currently enabled role)
check_option 	character_data 	Applies to a feature not available in PostgreSQL
is_updatable 	yes_or_no 	YES if the view is updatable (allows UPDATE and DELETE), NO if not
is_insertable_into 	yes_or_no 	YES if the view is insertable into (allows INSERT), NO if not
is_trigger_updatable 	yes_or_no 	YES if the view has an INSTEAD OF UPDATE trigger defined on it, NO if not
is_trigger_deletable 	yes_or_no 	YES if the view has an INSTEAD OF DELETE trigger defined on it, NO if not
is_trigger_insertable_into 	yes_or_no 	YES if the view has an INSTEAD OF INSERT trigger defined on it, NO if not

<#Map>
         rr:logicalTable [
            rr:tablename "INFORMATION_SCHEMA.views"
         ];
         rr:subjectMap [
            rr:class pgsql:View;
            rr:termType rr:BlankNode;

         ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
         rr:predicateObjectMap [
            rr:predicate mysql:;
            rr:objectMap [
                rr:column "";
            ];
];
.
